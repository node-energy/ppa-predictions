"""squash migrations

Revision ID: 693cd4058b08
Revises: 
Create Date: 2024-08-27 15:48:35.108250

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '693cd4058b08'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('alias', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('components',
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('producer_location_id', sa.Uuid(), nullable=True),
    sa.Column('prognosis_data_retriever', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['producer_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locationsettings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Uuid(), nullable=True),
    sa.Column('active_from', sa.Date(), nullable=False),
    sa.Column('active_until', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('location_id')
    )
    op.create_table('predictions',
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('dataframe', sa.PickleType(), nullable=False),
    sa.Column('location_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marketlocations',
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('metering_direction', sa.String(), nullable=False),
    sa.Column('component_id', sa.Uuid(), nullable=True),
    sa.Column('residual_long_location_id', sa.Uuid(), nullable=True),
    sa.Column('residual_short_location_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], ),
    sa.ForeignKeyConstraint(['residual_long_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['residual_short_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('historicloaddata',
    sa.Column('dataframe', sa.PickleType(), nullable=False),
    sa.Column('market_location_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['market_location_id'], ['marketlocations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('historicloaddata')
    op.drop_table('marketlocations')
    op.drop_table('predictions')
    op.drop_table('locationsettings')
    op.drop_table('components')
    op.drop_table('locations')
    # ### end Alembic commands ###
